service: retorimac

plugins:
  - serverless-scriptable-plugin
  - serverless-offline
  - serverless-plugin-typescript

custom:
  scriptable:
    hooks:
      before:deploy:deploy: "npm run build"
      before:offline:start: "npm run build"

provider:
  name: aws
  region: us-east-1
  runtime: nodejs20.x
  stage: ${opt:stage, 'dev'}
  environment:
    TABLA_FUSIONADOS: arn:aws:dynamodb:us-east-1:250348620641:table/TABLA_FUSIONADOS
    STAGE: ${self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan  
        - dynamodb:GetItem
        - dynamodb:UpdateItem
        - dynamodb:PutItem
      Resource: 
        Fn::Join:
          - ''
          - - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/"
            - ${self:provider.environment.TABLA_FUSIONADOS}

functions:
  main:
    handler: src/main.handler
    timeout: 20
    events:
      - http:
          method: GET
          path: /fusionados/{id}
          integration: lambda-proxy
      - http:
          method: POST
          path: /almacenar
          integration: lambda-proxy
      - http:
          method: GET
          path: /historial
          integration: lambda-proxy

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.TABLA_FUSIONADOS}
